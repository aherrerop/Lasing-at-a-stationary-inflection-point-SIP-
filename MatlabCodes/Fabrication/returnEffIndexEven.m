%{
||
|| @file 	returnEffIndexEven.m
|| @version	1.0
|| @author	Nathaniel Furman
|| @contact	furmann@uci.edu
|| @credit
|| | 
|| #
||
|| @description
|| | Returns the even mode effective refractive index for a coupled
|| | 450x220 nm Si with SiO2 cladding OWG and a 150 nm gap based on given
|| | frequency parameters.
|| #
||
|| @license
|| | This library is free software; you can redistribute it and/or
|| | modify it under the terms of the GNU Lesser General Public
|| | License as published by the Free Software Foundation; version
|| | 2.1 of the License.
|| |
|| | This library is distributed in the hope that it will be useful,
|| | but WITHOUT ANY WARRANTY; without even the implied warranty of
|| | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
|| | Lesser General Public License for more details.
|| |
|| | You should have received a copy of the GNU Lesser General Public
|| | License along with this library; if not, write to the Free Software
|| | Foundation Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110 USA
|| #
||
%}

function n_even = returnEffIndexEven(freq_min, freq_max, freq_bin)

if freq_min < 190 || freq_max > 196 % In THz
    error("Frequency not in range, must select between 190-196 THz")
end

% Copied from "CST-Results/Coupled-WG-Wideband-Epsilon.txt"

freq_sim = [ ...
    190.00000000000; ...
    190.58950000000; ...
    191.27110000000; ...
    192.08110000000; ...
    192.79990000000; ...
    192.99970000000; ...
    193.00000000000; ...
    193.00120000000; ...
    193.03240000000; ...
    193.94710000000; ...
    194.50000000000; ...
    195.04000000000; ...
    195.33820000000; ...
    195.59620000000; ...
    195.82510000000; ...
    195.97000000000; ...
    195.99970000000; ...
    196.00000000000; ...
];

%{
% Port one even mode
epsilon_11 = [ ...
    5.5644729036064; ...
	5.5879170422809; ...
	5.6149301756367; ...
	5.6468997083307; ...
	5.6751478938937; ...
	5.6829793256537; ...
	5.6829910778131; ...
	5.6830380862605; ...
	5.6842601921801; ...
	5.7199912953093; ...
	5.7414970268255; ...
	5.7624332673261; ...
	5.7739658728286; ...
	5.7839271440008; ...
	5.7927519155376; ...
	5.7983319248458; ...
	5.7994750480493; ...
	5.7995014011418; ...
];

% Port two even mode
epsilon_21 = [ ...
    5.5646390054462; ...
	5.5880825083916; ...
	5.6150949054844; ...
	5.6470635618240; ...
	5.6753109687273; ...
	5.6831421839166; ...
	5.6831539357531; ...
	5.6832009428975; ...
	5.6844230150003; ...
	5.7201531261560; ...
	5.7416582578398; ...
	5.7625939124576; ...
	5.7741261944381; ...
	5.7840871857368; ...
	5.7929117089918; ...
	5.7984915611523; ...
	5.7996346521475; ...
	5.7996600250143; ...
];
%}

% Calculate average odd mode refractive index
%n_even_sim = sqrt((epsilon_11+epsilon_21)/2);
n_even_sim = [ ...
   2.358931104234776; ...
   2.363895043214959; ...
   2.369601768348545; ...
   2.376337862147837; ...
   2.382274004246888; ...
   2.383917103169729; ...
   2.383919568018833; ...
   2.383929427348679; ...
   2.384185731773051; ...
   2.391667244984689; ...
   2.396158935115250; ...
   2.400523607443145; ...
   2.402924475224586; ...
   2.404996292069657; ...
   2.406830241679853; ...
   2.407989149269375; ...
   2.408226494767134; ...
   2.408231864476104; ...
];

n_even = interp1(freq_sim, n_even_sim, ...
    linspace(freq_min, freq_max, freq_bin), 'spline');

end

%% Footer
%{
|| @changelog
|| | 1.0 2022-04-03 - Nathaniel Furman : Initial Release
|| #
%}